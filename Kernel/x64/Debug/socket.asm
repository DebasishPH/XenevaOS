; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?AuCreateSocket@@YAHHHH@Z			; AuCreateSocket
EXTRN	?CreateIPv4Socket@@YAHHH@Z:PROC			; CreateIPv4Socket
EXTRN	x64_cli:PROC
pdata	SEGMENT
$pdata$?AuCreateSocket@@YAHHHH@Z DD imagerel $LN8
	DD	imagerel $LN8+75
	DD	imagerel $unwind$?AuCreateSocket@@YAHHHH@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?AuCreateSocket@@YAHHHH@Z DD 011101H
	DD	06211H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\aurora\kernel\net\socket.cpp
_TEXT	SEGMENT
tv64 = 32
domain$ = 64
type$ = 72
protocol$ = 80
?AuCreateSocket@@YAHHHH@Z PROC				; AuCreateSocket

; 41   : int AuCreateSocket(int domain, int type, int protocol) {

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 56					; 00000038H

; 42   : 	x64_cli();

	call	x64_cli

; 43   : 	switch (domain) {

	mov	eax, DWORD PTR domain$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 1
	je	SHORT $LN3@AuCreateSo
	cmp	DWORD PTR tv64[rsp], 2
	je	SHORT $LN2@AuCreateSo
	jmp	SHORT $LN1@AuCreateSo
$LN3@AuCreateSo:

; 44   : 	case AF_INET:
; 45   : 		return CreateIPv4Socket(type, protocol);

	mov	edx, DWORD PTR protocol$[rsp]
	mov	ecx, DWORD PTR type$[rsp]
	call	?CreateIPv4Socket@@YAHHH@Z		; CreateIPv4Socket
	jmp	SHORT $LN6@AuCreateSo
$LN2@AuCreateSo:

; 46   : 	case AF_RAW:
; 47   : 		//create a raw socket
; 48   : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN6@AuCreateSo
$LN1@AuCreateSo:

; 49   : 	default:
; 50   : 		return -1;

	mov	eax, -1
$LN6@AuCreateSo:

; 51   : 	}
; 52   : }

	add	rsp, 56					; 00000038H
	ret	0
?AuCreateSocket@@YAHHHH@Z ENDP				; AuCreateSocket
_TEXT	ENDS
END
