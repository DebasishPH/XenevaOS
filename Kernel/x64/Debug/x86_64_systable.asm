; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30154.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?null_call@@YA_K_K00000@Z			; null_call
EXTRN	SeTextOut:PROC
EXTRN	?AuCreateSocket@@YAHHHH@Z:PROC			; AuCreateSocket
EXTRN	?AuSocketSetOpt@@YAHHHHPEBX_K@Z:PROC		; AuSocketSetOpt
EXTRN	?PauseThread@@YAHXZ:PROC			; PauseThread
EXTRN	?GetThreadID@@YAGXZ:PROC			; GetThreadID
EXTRN	?GetProcessID@@YAHXZ:PROC			; GetProcessID
EXTRN	?ProcessExit@@YAHXZ:PROC			; ProcessExit
EXTRN	?ProcessWaitForTermination@@YAHH@Z:PROC		; ProcessWaitForTermination
EXTRN	?CreateProcess@@YAHHPEAD@Z:PROC			; CreateProcess
EXTRN	?ProcessLoadExec@@YAHHPEADHPEAPEAD@Z:PROC	; ProcessLoadExec
EXTRN	?ProcessSleep@@YAH_K@Z:PROC			; ProcessSleep
EXTRN	?SignalReturn@@YAXH@Z:PROC			; SignalReturn
EXTRN	?SetSignal@@YAHHP6AXH@Z@Z:PROC			; SetSignal
EXTRN	?CreateSharedMem@@YAHG_KE@Z:PROC		; CreateSharedMem
EXTRN	?ObtainSharedMem@@YAPEAXGPEAXH@Z:PROC		; ObtainSharedMem
EXTRN	?UnmapSharedMem@@YAXG@Z:PROC			; UnmapSharedMem
EXTRN	?GetProcessHeapMem@@YA_K_K@Z:PROC		; GetProcessHeapMem
EXTRN	?OpenFile@@YAHPEADH@Z:PROC			; OpenFile
EXTRN	?ReadFile@@YA_KHPEAX_K@Z:PROC			; ReadFile
EXTRN	?WriteFile@@YA_KHPEAX_K@Z:PROC			; WriteFile
EXTRN	?CreateDir@@YAHPEAD@Z:PROC			; CreateDir
EXTRN	?RemoveFile@@YAHPEAD@Z:PROC			; RemoveFile
EXTRN	?CloseFile@@YAHH@Z:PROC				; CloseFile
EXTRN	?FileIoControl@@YAHHHPEAX@Z:PROC		; FileIoControl
EXTRN	?FileStat@@YAHHPEAX@Z:PROC			; FileStat
EXTRN	?GetSystemTimerTick@@YA_KXZ:PROC		; GetSystemTimerTick
EXTRN	?CreateUserThread@@YAHP6AXPEAX@ZPEAD@Z:PROC	; CreateUserThread
EXTRN	?SetFileToProcess@@YAHHHH@Z:PROC		; SetFileToProcess
EXTRN	?ProcessHeapUnmap@@YAHPEAX_K@Z:PROC		; ProcessHeapUnmap
EXTRN	?SendSignal@@YAHHH@Z:PROC			; SendSignal
EXTRN	?GetCurrentTime@@YAHPEAX@Z:PROC			; GetCurrentTime
EXTRN	?OpenDir@@YAHPEAD@Z:PROC			; OpenDir
EXTRN	?ReadDir@@YAHHPEAX@Z:PROC			; ReadDir
EXTRN	?CreateTimer@@YAHHHE@Z:PROC			; CreateTimer
EXTRN	?StartTimer@@YAHH@Z:PROC			; StartTimer
EXTRN	?StopTimer@@YAHH@Z:PROC				; StopTimer
EXTRN	?DestroyTimer@@YAHH@Z:PROC			; DestroyTimer
EXTRN	?ProcessGetFileDesc@@YAHPEBD@Z:PROC		; ProcessGetFileDesc
EXTRN	?FileSetOffset@@YAHH_K@Z:PROC			; FileSetOffset
EXTRN	?GetTimeOfDay@@YAHPEAX@Z:PROC			; GetTimeOfDay
EXTRN	?NetSend@@YAHHPEAU_msghdr_@@H@Z:PROC		; NetSend
EXTRN	?NetReceive@@YAHHPEAU_msghdr_@@H@Z:PROC		; NetReceive
EXTRN	?NetConnect@@YAHHPEAU_sockaddr_@@_K@Z:PROC	; NetConnect
EXTRN	?NetBind@@YAHHPEAU_sockaddr_@@_K@Z:PROC		; NetBind
EXTRN	?NetAccept@@YAHHPEAU_sockaddr_@@PEA_K@Z:PROC	; NetAccept
EXTRN	?NetListen@@YAHHH@Z:PROC			; NetListen
EXTRN	?AuFTMngrGetFontID@@YAHPEAD@Z:PROC		; AuFTMngrGetFontID
EXTRN	?AuFTMngrGetNumFonts@@YAHXZ:PROC		; AuFTMngrGetNumFonts
EXTRN	?AuFTMngrGetFontSize@@YAHPEAD@Z:PROC		; AuFTMngrGetFontSize
EXTRN	?AuTTYCreate@@YAHPEAH0@Z:PROC			; AuTTYCreate
EXTRN	?AuCreatePipe@@YAHPEAD_K@Z:PROC			; AuCreatePipe
EXTRN	?CreateMemMapping@@YAPEAXPEAX_KHHH1@Z:PROC	; CreateMemMapping
EXTRN	?MemMapDirty@@YAXPEAX_KHH@Z:PROC		; MemMapDirty
EXTRN	?UnmapMemMapping@@YAXPEAX_K@Z:PROC		; UnmapMemMapping
msvcjmc	SEGMENT
__A02DB339_x86_64_systable@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?KePrintMsg@@YA_K_K00000@Z			; KePrintMsg
PUBLIC	x64_syscall_handler
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6@			; `string'
EXTRN	AuTextOut:PROC
EXTRN	AuGetCurrentThread:PROC
EXTRN	x64_cli:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?KePrintMsg@@YA_K_K00000@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?KePrintMsg@@YA_K_K00000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?null_call@@YA_K_K00000@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?null_call@@YA_K_K00000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$x64_syscall_handler DD imagerel $LN6
	DD	imagerel $LN6+195
	DD	imagerel $unwind$x64_syscall_handler
pdata	ENDS
_DATA	SEGMENT
?syscalls@@3PAPEAXA DQ FLAT:?null_call@@YA_K_K00000@Z	; syscalls
	DQ	FLAT:SeTextOut
	DQ	FLAT:?PauseThread@@YAHXZ
	DQ	FLAT:?GetThreadID@@YAGXZ
	DQ	FLAT:?GetProcessID@@YAHXZ
	DQ	FLAT:?ProcessExit@@YAHXZ
	DQ	FLAT:?ProcessWaitForTermination@@YAHH@Z
	DQ	FLAT:?CreateProcess@@YAHHPEAD@Z
	DQ	FLAT:?ProcessLoadExec@@YAHHPEADHPEAPEAD@Z
	DQ	FLAT:?CreateSharedMem@@YAHG_KE@Z
	DQ	FLAT:?ObtainSharedMem@@YAPEAXGPEAXH@Z
	DQ	FLAT:?UnmapSharedMem@@YAXG@Z
	DQ	FLAT:?OpenFile@@YAHPEADH@Z
	DQ	FLAT:?CreateMemMapping@@YAPEAXPEAX_KHHH1@Z
	DQ	FLAT:?UnmapMemMapping@@YAXPEAX_K@Z
	DQ	FLAT:?GetProcessHeapMem@@YA_K_K@Z
	DQ	FLAT:?ReadFile@@YA_KHPEAX_K@Z
	DQ	FLAT:?WriteFile@@YA_KHPEAX_K@Z
	DQ	FLAT:?CreateDir@@YAHPEAD@Z
	DQ	FLAT:?RemoveFile@@YAHPEAD@Z
	DQ	FLAT:?CloseFile@@YAHH@Z
	DQ	FLAT:?FileIoControl@@YAHHHPEAX@Z
	DQ	FLAT:?FileStat@@YAHHPEAX@Z
	DQ	FLAT:?ProcessSleep@@YAH_K@Z
	DQ	FLAT:?SignalReturn@@YAXH@Z
	DQ	FLAT:?SetSignal@@YAHHP6AXH@Z@Z
	DQ	FLAT:?GetSystemTimerTick@@YA_KXZ
	DQ	FLAT:?AuFTMngrGetFontID@@YAHPEAD@Z
	DQ	FLAT:?AuFTMngrGetNumFonts@@YAHXZ
	DQ	FLAT:?AuFTMngrGetFontSize@@YAHPEAD@Z
	DQ	FLAT:?MemMapDirty@@YAXPEAX_KHH@Z
	DQ	FLAT:?AuTTYCreate@@YAHPEAH0@Z
	DQ	FLAT:?CreateUserThread@@YAHP6AXPEAX@ZPEAD@Z
	DQ	FLAT:?SetFileToProcess@@YAHHHH@Z
	DQ	FLAT:?ProcessHeapUnmap@@YAHPEAX_K@Z
	DQ	FLAT:?SendSignal@@YAHHH@Z
	DQ	FLAT:?GetCurrentTime@@YAHPEAX@Z
	DQ	FLAT:?OpenDir@@YAHPEAD@Z
	DQ	FLAT:?ReadDir@@YAHHPEAX@Z
	DQ	FLAT:?CreateTimer@@YAHHHE@Z
	DQ	FLAT:?StartTimer@@YAHH@Z
	DQ	FLAT:?StopTimer@@YAHH@Z
	DQ	FLAT:?DestroyTimer@@YAHH@Z
	DQ	FLAT:?ProcessGetFileDesc@@YAHPEBD@Z
	DQ	FLAT:?FileSetOffset@@YAHH_K@Z
	DQ	FLAT:?GetTimeOfDay@@YAHPEAX@Z
	DQ	FLAT:?AuCreateSocket@@YAHHHH@Z
	DQ	FLAT:?NetConnect@@YAHHPEAU_sockaddr_@@_K@Z
	DQ	FLAT:?NetSend@@YAHHPEAU_msghdr_@@H@Z
	DQ	FLAT:?NetReceive@@YAHHPEAU_msghdr_@@H@Z
	DQ	FLAT:?AuSocketSetOpt@@YAHHHHPEBX_K@Z
	DQ	FLAT:?NetBind@@YAHHPEAU_sockaddr_@@_K@Z
	DQ	FLAT:?NetAccept@@YAHHPEAU_sockaddr_@@PEA_K@Z
	DQ	FLAT:?NetListen@@YAHHH@Z
	DQ	FLAT:?AuCreatePipe@@YAHPEAD_K@Z
_DATA	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$x64_syscall_handler DD 035041101H
	DD	010c3311H
	DD	050050012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?null_call@@YA_K_K00000@Z DD 025031e01H
	DD	0b219231eH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?KePrintMsg@@YA_K_K00000@Z DD 025031e01H
	DD	0d219231eH
	DD	05015H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\Hal\x86_64_systable.cpp
;	COMDAT x64_syscall_handler
_TEXT	SEGMENT
current_thr$ = 0
ret_code$ = 8
func$ = 16
a$ = 112
x64_syscall_handler PROC				; COMDAT

; 137  : extern "C" uint64_t x64_syscall_handler(int a) {

$LN6:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	sub	rsp, 144				; 00000090H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__A02DB339_x86_64_systable@cpp
	call	__CheckForDebuggerJustMyCode

; 138  : 	x64_cli();

	call	x64_cli

; 139  : 	AuThread* current_thr = AuGetCurrentThread();

	call	AuGetCurrentThread
	mov	QWORD PTR current_thr$[rbp], rax

; 140  : 	uint64_t ret_code = 0;

	mov	QWORD PTR ret_code$[rbp], 0

; 141  : 
; 142  : 	if (a < 0 || a >= AURORA_MAX_SYSCALL)

	cmp	DWORD PTR a$[rbp], 0
	jl	SHORT $LN3@x64_syscal
	cmp	DWORD PTR a$[rbp], 55			; 00000037H
	jl	SHORT $LN2@x64_syscal
$LN3@x64_syscal:

; 143  : 		return -1;

	mov	rax, -1
	jmp	SHORT $LN1@x64_syscal
$LN2@x64_syscal:

; 144  : 	
; 145  : 	syscall_func func = (syscall_func)syscalls[a];

	movsxd	rax, DWORD PTR a$[rbp]
	lea	rcx, OFFSET FLAT:?syscalls@@3PAPEAXA
	mov	rax, QWORD PTR [rcx+rax*8]
	mov	QWORD PTR func$[rbp], rax

; 146  : 	if (!func)

	cmp	QWORD PTR func$[rbp], 0
	jne	SHORT $LN4@x64_syscal

; 147  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN1@x64_syscal
$LN4@x64_syscal:

; 148  : 
; 149  : 	ret_code = func(current_thr->syscall_param.param1, current_thr->syscall_param.param2, current_thr->syscall_param.param3,

	mov	rax, QWORD PTR current_thr$[rbp]
	mov	rax, QWORD PTR [rax+264]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR current_thr$[rbp]
	mov	rax, QWORD PTR [rax+256]
	mov	QWORD PTR [rsp+32], rax
	mov	rax, QWORD PTR current_thr$[rbp]
	mov	r9, QWORD PTR [rax+248]
	mov	rax, QWORD PTR current_thr$[rbp]
	mov	r8, QWORD PTR [rax+240]
	mov	rax, QWORD PTR current_thr$[rbp]
	mov	rdx, QWORD PTR [rax+232]
	mov	rax, QWORD PTR current_thr$[rbp]
	mov	rcx, QWORD PTR [rax+224]
	call	QWORD PTR func$[rbp]
	mov	QWORD PTR ret_code$[rbp], rax

; 150  : 			current_thr->syscall_param.param4, current_thr->syscall_param.param5, current_thr->syscall_param.param6);
; 151  : 
; 152  : 	return ret_code;

	mov	rax, QWORD PTR ret_code$[rbp]
$LN1@x64_syscal:

; 153  : }

	lea	rsp, QWORD PTR [rbp+96]
	pop	rbp
	ret	0
x64_syscall_handler ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\Hal\x86_64_systable.cpp
;	COMDAT ?null_call@@YA_K_K00000@Z
_TEXT	SEGMENT
param1$ = 80
param2$ = 88
param3$ = 96
param4$ = 104
param5$ = 112
param6$ = 120
?null_call@@YA_K_K00000@Z PROC				; null_call, COMDAT

; 69   : 	param4, uint64_t param5, uint64_t param6) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__A02DB339_x86_64_systable@cpp
	call	__CheckForDebuggerJustMyCode

; 70   : 	return 0;

	xor	eax, eax

; 71   : }

	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?null_call@@YA_K_K00000@Z ENDP				; null_call
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\Hal\x86_64_systable.cpp
;	COMDAT ?KePrintMsg@@YA_K_K00000@Z
_TEXT	SEGMENT
text$ = 0
param1$ = 96
param2$ = 104
param3$ = 112
param4$ = 120
param5$ = 128
param6$ = 136
?KePrintMsg@@YA_K_K00000@Z PROC				; KePrintMsg, COMDAT

; 59   : 	param4, uint64_t param5, uint64_t param6) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__A02DB339_x86_64_systable@cpp
	call	__CheckForDebuggerJustMyCode

; 60   : 	char* text = (char*)param1;

	mov	rax, QWORD PTR param1$[rbp]
	mov	QWORD PTR text$[rbp], rax

; 61   : 	AuTextOut("%s\n",text);

	mov	rdx, QWORD PTR text$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_03OFAPEBGM@?$CFs?6@
	call	AuTextOut

; 62   : 	return 0;

	xor	eax, eax

; 63   : }

	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?KePrintMsg@@YA_K_K00000@Z ENDP				; KePrintMsg
_TEXT	ENDS
END
