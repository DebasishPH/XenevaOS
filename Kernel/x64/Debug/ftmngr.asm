; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30154.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?firstSeg@@3PEAU_font_seg_@@EA			; firstSeg
PUBLIC	?lastSeg@@3PEAU_font_seg_@@EA			; lastSeg
PUBLIC	?font_conf_data@@3PEAEEA			; font_conf_data
PUBLIC	?fontKey@@3GA					; fontKey
PUBLIC	?totalSysFonts@@3HA				; totalSysFonts
_BSS	SEGMENT
?firstSeg@@3PEAU_font_seg_@@EA DQ 01H DUP (?)		; firstSeg
?lastSeg@@3PEAU_font_seg_@@EA DQ 01H DUP (?)		; lastSeg
?font_conf_data@@3PEAEEA DQ 01H DUP (?)			; font_conf_data
?fontKey@@3GA DW 01H DUP (?)				; fontKey
	ALIGN	4

?totalSysFonts@@3HA DD 01H DUP (?)			; totalSysFonts
_BSS	ENDS
msvcjmc	SEGMENT
__12B7B25A_ftmngr@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?FontManagerInitialise@@YAXXZ			; FontManagerInitialise
PUBLIC	?AuFTMngrGetFontID@@YAHPEAD@Z			; AuFTMngrGetFontID
PUBLIC	?AuFTMngrGetNumFonts@@YAHXZ			; AuFTMngrGetNumFonts
PUBLIC	?AuFTMngrGetFontSize@@YAHPEAD@Z			; AuFTMngrGetFontSize
PUBLIC	?FontManagerAddSegment@@YAXPEAU_font_seg_@@@Z	; FontManagerAddSegment
PUBLIC	?FontManagerRemoveSegment@@YAXPEAU_font_seg_@@@Z ; FontManagerRemoveSegment
PUBLIC	?FontManagerGetKey@@YAGXZ			; FontManagerGetKey
PUBLIC	?FontManagerAllocateSegment@@YAPEAU_font_seg_@@PEAU__VFS_NODE__@@PEAD@Z ; FontManagerAllocateSegment
PUBLIC	?FontManagerOpenFontFile@@YAPEAU__VFS_NODE__@@PEAD@Z ; FontManagerOpenFontFile
PUBLIC	?FontManagerIterateFontList@@YAXPEAE@Z		; FontManagerIterateFontList
PUBLIC	?FontManagerGetFontCount@@YAHPEAE@Z		; FontManagerGetFontCount
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_01KMDKNFGN@?1@				; `string'
PUBLIC	??_C@_0CB@KGEMJHCP@?$FLaurora?$FN?3?5Loading?5system?5fonts?5@ ; `string'
PUBLIC	??_C@_0L@BMFBAAPK@?1ftlst?4cnf@			; `string'
EXTRN	strcmp:PROC
EXTRN	strcpy:PROC
EXTRN	strchr:PROC
EXTRN	memset:PROC
EXTRN	AuVFSOpen:PROC
EXTRN	AuVFSFind:PROC
EXTRN	AuVFSNodeRead:PROC
EXTRN	?AuGetSHMByID@@YAPEAU_shm_@@G@Z:PROC		; AuGetSHMByID
EXTRN	?AuCreateSHM@@YAHPEAU_au_proc_@@G_KE@Z:PROC	; AuCreateSHM
EXTRN	AuPmmngrAlloc:PROC
EXTRN	P2V:PROC
EXTRN	AuTextOut:PROC
EXTRN	kmalloc:PROC
EXTRN	kfree:PROC
EXTRN	?atoi@@YAHPEBD@Z:PROC				; atoi
EXTRN	__CheckForDebuggerJustMyCode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FontManagerInitialise@@YAXXZ DD imagerel $LN9
	DD	imagerel $LN9+334
	DD	imagerel $unwind$?FontManagerInitialise@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AuFTMngrGetFontID@@YAHPEAD@Z DD imagerel $LN7
	DD	imagerel $LN7+141
	DD	imagerel $unwind$?AuFTMngrGetFontID@@YAHPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AuFTMngrGetNumFonts@@YAHXZ DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$?AuFTMngrGetNumFonts@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AuFTMngrGetFontSize@@YAHPEAD@Z DD imagerel $LN7
	DD	imagerel $LN7+101
	DD	imagerel $unwind$?AuFTMngrGetFontSize@@YAHPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FontManagerAddSegment@@YAXPEAU_font_seg_@@@Z DD imagerel $LN5
	DD	imagerel $LN5+132
	DD	imagerel $unwind$?FontManagerAddSegment@@YAXPEAU_font_seg_@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FontManagerRemoveSegment@@YAXPEAU_font_seg_@@@Z DD imagerel $LN8
	DD	imagerel $LN8+148
	DD	imagerel $unwind$?FontManagerRemoveSegment@@YAXPEAU_font_seg_@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FontManagerGetKey@@YAGXZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?FontManagerGetKey@@YAGXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FontManagerAllocateSegment@@YAPEAU_font_seg_@@PEAU__VFS_NODE__@@PEAD@Z DD imagerel $LN4
	DD	imagerel $LN4+211
	DD	imagerel $unwind$?FontManagerAllocateSegment@@YAPEAU_font_seg_@@PEAU__VFS_NODE__@@PEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FontManagerOpenFontFile@@YAPEAU__VFS_NODE__@@PEAD@Z DD imagerel $LN4
	DD	imagerel $LN4+55
	DD	imagerel $unwind$?FontManagerOpenFontFile@@YAPEAU__VFS_NODE__@@PEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FontManagerIterateFontList@@YAXPEAE@Z DD imagerel $LN14
	DD	imagerel $LN14+483
	DD	imagerel $unwind$?FontManagerIterateFontList@@YAXPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FontManagerGetFontCount@@YAHPEAE@Z DD imagerel $LN9
	DD	imagerel $LN9+181
	DD	imagerel $unwind$?FontManagerGetFontCount@@YAHPEAE@Z
pdata	ENDS
;	COMDAT ??_C@_0L@BMFBAAPK@?1ftlst?4cnf@
CONST	SEGMENT
??_C@_0L@BMFBAAPK@?1ftlst?4cnf@ DB '/ftlst.cnf', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KGEMJHCP@?$FLaurora?$FN?3?5Loading?5system?5fonts?5@
CONST	SEGMENT
??_C@_0CB@KGEMJHCP@?$FLaurora?$FN?3?5Loading?5system?5fonts?5@ DB '[auror'
	DB	'a]: Loading system fonts ', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KMDKNFGN@?1@
CONST	SEGMENT
??_C@_01KMDKNFGN@?1@ DB '/', 00H			; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FontManagerGetFontCount@@YAHPEAE@Z DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FontManagerIterateFontList@@YAXPEAE@Z DD 025041201H
	DD	010d2312H
	DD	05006001eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FontManagerOpenFontFile@@YAPEAU__VFS_NODE__@@PEAD@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FontManagerAllocateSegment@@YAPEAU_font_seg_@@PEAU__VFS_NODE__@@PEAD@Z DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FontManagerGetKey@@YAGXZ DD 025030b01H
	DD	0d206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FontManagerRemoveSegment@@YAXPEAU_font_seg_@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FontManagerAddSegment@@YAXPEAU_font_seg_@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AuFTMngrGetFontSize@@YAHPEAD@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AuFTMngrGetNumFonts@@YAHXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AuFTMngrGetFontID@@YAHPEAD@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FontManagerInitialise@@YAXXZ DD 025040e01H
	DD	0109230eH
	DD	050020012H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\ftmngr.cpp
;	COMDAT ?FontManagerGetFontCount@@YAHPEAE@Z
_TEXT	SEGMENT
fbuf$ = 0
p$ = 8
num$ = 16
i$ = 20
number$ = 24
fontlst$ = 112
?FontManagerGetFontCount@@YAHPEAE@Z PROC		; FontManagerGetFontCount, COMDAT

; 185  : int FontManagerGetFontCount(uint8_t* fontlst) {

$LN9:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 128				; 00000080H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12B7B25A_ftmngr@cpp
	call	__CheckForDebuggerJustMyCode

; 186  : 	char* fbuf = (char*)fontlst;

	mov	rax, QWORD PTR fontlst$[rbp]
	mov	QWORD PTR fbuf$[rbp], rax

; 187  : 	char* p = strchr(fbuf,'(');

	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR fbuf$[rbp]
	call	strchr
	mov	QWORD PTR p$[rbp], rax

; 188  : 	if (p){

	cmp	QWORD PTR p$[rbp], 0
	je	SHORT $LN5@FontManage

; 189  : 		p++;

	mov	rax, QWORD PTR p$[rbp]
	inc	rax
	mov	QWORD PTR p$[rbp], rax

; 190  : 	}

	jmp	SHORT $LN6@FontManage
$LN5@FontManage:

; 191  : 	else {
; 192  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN1@FontManage
$LN6@FontManage:

; 193  : 	}
; 194  : 	char num[3];
; 195  : 	int i = 0;

	mov	DWORD PTR i$[rbp], 0

; 196  : 	for (i = 0; i < 3; i++) {

	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@FontManage
$LN2@FontManage:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@FontManage:
	cmp	DWORD PTR i$[rbp], 3
	jge	SHORT $LN3@FontManage

; 197  : 		if (p[i] == ')')

	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 41					; 00000029H
	jne	SHORT $LN7@FontManage

; 198  : 			break;

	jmp	SHORT $LN3@FontManage
$LN7@FontManage:

; 199  : 		num[i] = p[i];

	movsxd	rax, DWORD PTR i$[rbp]
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rdx+rax]
	mov	BYTE PTR num$[rbp+rcx], al

; 200  : 	}

	jmp	SHORT $LN2@FontManage
$LN3@FontManage:

; 201  : 	num[i] = 0;

	movsxd	rax, DWORD PTR i$[rbp]
	mov	BYTE PTR num$[rbp+rax], 0

; 202  : 	int number = atoi(num);

	lea	rcx, QWORD PTR num$[rbp]
	call	?atoi@@YAHPEBD@Z			; atoi
	mov	DWORD PTR number$[rbp], eax

; 203  : 	return number;

	mov	eax, DWORD PTR number$[rbp]
$LN1@FontManage:

; 204  : }

	lea	rsp, QWORD PTR [rbp+96]
	pop	rbp
	ret	0
?FontManagerGetFontCount@@YAHPEAE@Z ENDP		; FontManagerGetFontCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\ftmngr.cpp
;	COMDAT ?FontManagerIterateFontList@@YAXPEAE@Z
_TEXT	SEGMENT
fbuf$ = 0
p$ = 8
fontname$ = 16
i$ = 48
filename$ = 56
fs$ = 88
fontfile$ = 96
seg$1 = 104
firstFrame$2 = 112
ret$3 = 120
tv156 = 192
fontlst$ = 224
?FontManagerIterateFontList@@YAXPEAE@Z PROC		; FontManagerIterateFontList, COMDAT

; 134  : void FontManagerIterateFontList(uint8_t* fontlst) {

$LN14:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 240				; 000000f0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12B7B25A_ftmngr@cpp
	call	__CheckForDebuggerJustMyCode

; 135  : 	char* fbuf = (char*)fontlst;

	mov	rax, QWORD PTR fontlst$[rbp]
	mov	QWORD PTR fbuf$[rbp], rax
$search$15:

; 136  : search:
; 137  : 	char* p = strchr(fbuf, '[');

	mov	edx, 91					; 0000005bH
	mov	rcx, QWORD PTR fbuf$[rbp]
	call	strchr
	mov	QWORD PTR p$[rbp], rax

; 138  : 	if (p){

	cmp	QWORD PTR p$[rbp], 0
	je	SHORT $LN8@FontManage

; 139  : 		p++;

	mov	rax, QWORD PTR p$[rbp]
	inc	rax
	mov	QWORD PTR p$[rbp], rax

; 140  : 		fbuf++;

	mov	rax, QWORD PTR fbuf$[rbp]
	inc	rax
	mov	QWORD PTR fbuf$[rbp], rax

; 141  : 	}

	jmp	SHORT $LN9@FontManage
$LN8@FontManage:

; 142  : 	else{
; 143  : 		return;

	jmp	$LN1@FontManage
$LN9@FontManage:

; 144  : 	}
; 145  : 
; 146  : 	char fontname[32];
; 147  : 	int i = 0;

	mov	DWORD PTR i$[rbp], 0

; 148  : 	for (i = 0; i < 32; i++) {

	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@FontManage
$LN2@FontManage:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@FontManage:
	cmp	DWORD PTR i$[rbp], 32			; 00000020H
	jge	SHORT $LN3@FontManage

; 149  : 		if (p[i] == ']'){

	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 93					; 0000005dH
	jne	SHORT $LN10@FontManage

; 150  : 			fbuf = p + i;

	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR fbuf$[rbp], rax

; 151  : 			fbuf++;

	mov	rax, QWORD PTR fbuf$[rbp]
	inc	rax
	mov	QWORD PTR fbuf$[rbp], rax

; 152  : 			break;

	jmp	SHORT $LN3@FontManage
$LN10@FontManage:

; 153  : 		}
; 154  : 		fontname[i] = p[i];

	movsxd	rax, DWORD PTR i$[rbp]
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rdx+rax]
	mov	BYTE PTR fontname$[rbp+rcx], al

; 155  : 		fbuf++;

	mov	rax, QWORD PTR fbuf$[rbp]
	inc	rax
	mov	QWORD PTR fbuf$[rbp], rax

; 156  : 	}

	jmp	SHORT $LN2@FontManage
$LN3@FontManage:

; 157  : 	fontname[i] = 0;

	movsxd	rax, DWORD PTR i$[rbp]
	mov	BYTE PTR fontname$[rbp+rax], 0

; 158  : 
; 159  : 	p = fbuf;

	mov	rax, QWORD PTR fbuf$[rbp]
	mov	QWORD PTR p$[rbp], rax

; 160  : 	char filename[32];
; 161  : 	for (i = 0; i < 32; i++) {

	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN7@FontManage
$LN5@FontManage:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN7@FontManage:
	cmp	DWORD PTR i$[rbp], 32			; 00000020H
	jge	SHORT $LN6@FontManage

; 162  : 		if (p[i] == '|')

	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 124				; 0000007cH
	jne	SHORT $LN11@FontManage

; 163  : 			break;

	jmp	SHORT $LN6@FontManage
$LN11@FontManage:

; 164  : 		filename[i] = p[i];

	movsxd	rax, DWORD PTR i$[rbp]
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rdx+rax]
	mov	BYTE PTR filename$[rbp+rcx], al

; 165  : 		fbuf++;

	mov	rax, QWORD PTR fbuf$[rbp]
	inc	rax
	mov	QWORD PTR fbuf$[rbp], rax

; 166  : 	}

	jmp	SHORT $LN5@FontManage
$LN6@FontManage:

; 167  : 	filename[i] = 0;

	movsxd	rax, DWORD PTR i$[rbp]
	mov	BYTE PTR filename$[rbp+rax], 0

; 168  : 
; 169  : 	AuVFSNode* fs = AuVFSFind("/");

	lea	rcx, OFFSET FLAT:??_C@_01KMDKNFGN@?1@
	call	AuVFSFind
	mov	QWORD PTR fs$[rbp], rax

; 170  : 	AuVFSNode* fontfile = FontManagerOpenFontFile(filename);

	lea	rcx, QWORD PTR filename$[rbp]
	call	?FontManagerOpenFontFile@@YAPEAU__VFS_NODE__@@PEAD@Z ; FontManagerOpenFontFile
	mov	QWORD PTR fontfile$[rbp], rax

; 171  : 	if (fontfile) {

	cmp	QWORD PTR fontfile$[rbp], 0
	je	SHORT $LN12@FontManage

; 172  : 		FontSeg* seg = FontManagerAllocateSegment(fontfile, fontname);

	lea	rdx, QWORD PTR fontname$[rbp]
	mov	rcx, QWORD PTR fontfile$[rbp]
	call	?FontManagerAllocateSegment@@YAPEAU_font_seg_@@PEAU__VFS_NODE__@@PEAD@Z ; FontManagerAllocateSegment
	mov	QWORD PTR seg$1[rbp], rax

; 173  : 		uint64_t* firstFrame = (uint64_t*)seg->sharedSeg->frames[0];

	mov	rax, QWORD PTR seg$1[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rax, QWORD PTR [rax+12]
	mov	rax, QWORD PTR [rcx+rax]
	mov	QWORD PTR firstFrame$2[rbp], rax

; 174  : 		size_t ret = AuVFSNodeRead(fs, fontfile, (uint64_t*)P2V((size_t)firstFrame), ALIGN_UP(fontfile->size, 4096));

	mov	rax, QWORD PTR fontfile$[rbp]
	mov	eax, DWORD PTR [rax+32]
	add	eax, 4095				; 00000fffH
	xor	edx, edx
	mov	ecx, 4096				; 00001000H
	div	ecx
	imul	eax, eax, 4096				; 00001000H
	mov	DWORD PTR tv156[rbp], eax
	mov	rcx, QWORD PTR firstFrame$2[rbp]
	call	P2V
	mov	ecx, DWORD PTR tv156[rbp]
	mov	r9d, ecx
	mov	r8, rax
	mov	rdx, QWORD PTR fontfile$[rbp]
	mov	rcx, QWORD PTR fs$[rbp]
	call	AuVFSNodeRead
	mov	QWORD PTR ret$3[rbp], rax

; 175  : 		kfree(fontfile);

	mov	rcx, QWORD PTR fontfile$[rbp]
	call	kfree
$LN12@FontManage:

; 176  : 	}
; 177  : 	goto search;

	jmp	$search$15
$LN1@FontManage:

; 178  : 	
; 179  : }

	lea	rsp, QWORD PTR [rbp+208]
	pop	rbp
	ret	0
?FontManagerIterateFontList@@YAXPEAE@Z ENDP		; FontManagerIterateFontList
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\ftmngr.cpp
;	COMDAT ?FontManagerOpenFontFile@@YAPEAU__VFS_NODE__@@PEAD@Z
_TEXT	SEGMENT
font$ = 0
filename$ = 96
?FontManagerOpenFontFile@@YAPEAU__VFS_NODE__@@PEAD@Z PROC ; FontManagerOpenFontFile, COMDAT

; 123  : AuVFSNode* FontManagerOpenFontFile(char* filename) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12B7B25A_ftmngr@cpp
	call	__CheckForDebuggerJustMyCode

; 124  : 	AuVFSNode* font = AuVFSOpen(filename);

	mov	rcx, QWORD PTR filename$[rbp]
	call	AuVFSOpen
	mov	QWORD PTR font$[rbp], rax

; 125  : 	if (!font)

	cmp	QWORD PTR font$[rbp], 0
	jne	SHORT $LN2@FontManage

; 126  : 		return NULL;

	xor	eax, eax
$LN2@FontManage:

; 127  : }

	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?FontManagerOpenFontFile@@YAPEAU__VFS_NODE__@@PEAD@Z ENDP ; FontManagerOpenFontFile
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\ftmngr.cpp
;	COMDAT ?FontManagerAllocateSegment@@YAPEAU_font_seg_@@PEAU__VFS_NODE__@@PEAD@Z
_TEXT	SEGMENT
seg$ = 0
alignedSz$ = 8
id$ = 12
tv80 = 80
fontfile$ = 112
fontname$ = 120
?FontManagerAllocateSegment@@YAPEAU_font_seg_@@PEAU__VFS_NODE__@@PEAD@Z PROC ; FontManagerAllocateSegment, COMDAT

; 105  : FontSeg* FontManagerAllocateSegment(AuVFSNode* fontfile, char* fontname) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 128				; 00000080H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12B7B25A_ftmngr@cpp
	call	__CheckForDebuggerJustMyCode

; 106  : 	if (!fontfile)

	cmp	QWORD PTR fontfile$[rbp], 0
	jne	SHORT $LN2@FontManage

; 107  : 		return NULL;

	xor	eax, eax
	jmp	$LN1@FontManage
$LN2@FontManage:

; 108  : 	FontSeg* seg = (FontSeg*)kmalloc(sizeof(FontSeg));

	mov	ecx, 60					; 0000003cH
	call	kmalloc
	mov	QWORD PTR seg$[rbp], rax

; 109  : 	memset(seg, 0, sizeof(FontSeg));

	mov	r8d, 60					; 0000003cH
	xor	edx, edx
	mov	rcx, QWORD PTR seg$[rbp]
	call	memset

; 110  : 	strcpy(seg->fontname, fontname);

	mov	rax, QWORD PTR seg$[rbp]
	mov	rdx, QWORD PTR fontname$[rbp]
	mov	rcx, rax
	call	strcpy

; 111  : 	uint32_t alignedSz = ALIGN_UP(fontfile->size, 4096);

	mov	rax, QWORD PTR fontfile$[rbp]
	mov	eax, DWORD PTR [rax+32]
	add	eax, 4095				; 00000fffH
	xor	edx, edx
	mov	ecx, 4096				; 00001000H
	div	ecx
	imul	eax, eax, 4096				; 00001000H
	mov	DWORD PTR alignedSz$[rbp], eax

; 112  : 	int id = AuCreateSHM(NULL, FontManagerGetKey(), alignedSz, 0);

	mov	eax, DWORD PTR alignedSz$[rbp]
	mov	QWORD PTR tv80[rbp], rax
	call	?FontManagerGetKey@@YAGXZ		; FontManagerGetKey
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv80[rbp]
	mov	r8, rcx
	movzx	edx, ax
	xor	ecx, ecx
	call	?AuCreateSHM@@YAHPEAU_au_proc_@@G_KE@Z	; AuCreateSHM
	mov	DWORD PTR id$[rbp], eax

; 113  : 	seg->sharedSeg = AuGetSHMByID(id);

	movzx	ecx, WORD PTR id$[rbp]
	call	?AuGetSHMByID@@YAPEAU_shm_@@G@Z		; AuGetSHMByID
	mov	rcx, QWORD PTR seg$[rbp]
	mov	QWORD PTR [rcx+32], rax

; 114  : 	seg->fontFileSz = fontfile->size;

	mov	rax, QWORD PTR seg$[rbp]
	mov	rcx, QWORD PTR fontfile$[rbp]
	mov	ecx, DWORD PTR [rcx+32]
	mov	DWORD PTR [rax+40], ecx

; 115  : 	FontManagerAddSegment(seg);

	mov	rcx, QWORD PTR seg$[rbp]
	call	?FontManagerAddSegment@@YAXPEAU_font_seg_@@@Z ; FontManagerAddSegment

; 116  : 	return seg;

	mov	rax, QWORD PTR seg$[rbp]
$LN1@FontManage:

; 117  : }

	lea	rsp, QWORD PTR [rbp+96]
	pop	rbp
	ret	0
?FontManagerAllocateSegment@@YAPEAU_font_seg_@@PEAU__VFS_NODE__@@PEAD@Z ENDP ; FontManagerAllocateSegment
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\ftmngr.cpp
;	COMDAT ?FontManagerGetKey@@YAGXZ
_TEXT	SEGMENT
key$ = 0
?FontManagerGetKey@@YAGXZ PROC				; FontManagerGetKey, COMDAT

; 92   : uint16_t FontManagerGetKey(){

$LN3:
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12B7B25A_ftmngr@cpp
	call	__CheckForDebuggerJustMyCode

; 93   : 	uint16_t key = fontKey;

	movzx	eax, WORD PTR ?fontKey@@3GA		; fontKey
	mov	WORD PTR key$[rbp], ax

; 94   : 	fontKey = fontKey + 10;

	movzx	eax, WORD PTR ?fontKey@@3GA		; fontKey
	add	eax, 10
	mov	WORD PTR ?fontKey@@3GA, ax		; fontKey

; 95   : 	return key;

	movzx	eax, WORD PTR key$[rbp]

; 96   : }

	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?FontManagerGetKey@@YAGXZ ENDP				; FontManagerGetKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\ftmngr.cpp
;	COMDAT ?FontManagerRemoveSegment@@YAXPEAU_font_seg_@@@Z
_TEXT	SEGMENT
seg$ = 80
?FontManagerRemoveSegment@@YAXPEAU_font_seg_@@@Z PROC	; FontManagerRemoveSegment, COMDAT

; 70   : void FontManagerRemoveSegment(FontSeg* seg) {

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12B7B25A_ftmngr@cpp
	call	__CheckForDebuggerJustMyCode

; 71   : 	if (firstSeg == NULL)

	cmp	QWORD PTR ?firstSeg@@3PEAU_font_seg_@@EA, 0 ; firstSeg
	jne	SHORT $LN2@FontManage

; 72   : 		return;

	jmp	SHORT $LN1@FontManage
$LN2@FontManage:

; 73   : 
; 74   : 	if (seg == firstSeg) {

	mov	rax, QWORD PTR ?firstSeg@@3PEAU_font_seg_@@EA ; firstSeg
	cmp	QWORD PTR seg$[rbp], rax
	jne	SHORT $LN3@FontManage

; 75   : 		firstSeg = firstSeg->next;

	mov	rax, QWORD PTR ?firstSeg@@3PEAU_font_seg_@@EA ; firstSeg
	mov	rax, QWORD PTR [rax+44]
	mov	QWORD PTR ?firstSeg@@3PEAU_font_seg_@@EA, rax ; firstSeg

; 76   : 	}

	jmp	SHORT $LN4@FontManage
$LN3@FontManage:

; 77   : 	else {
; 78   : 		seg->prev->next = seg->next;

	mov	rax, QWORD PTR seg$[rbp]
	mov	rax, QWORD PTR [rax+52]
	mov	rcx, QWORD PTR seg$[rbp]
	mov	rcx, QWORD PTR [rcx+44]
	mov	QWORD PTR [rax+44], rcx
$LN4@FontManage:

; 79   : 	}
; 80   : 
; 81   : 	if (seg == lastSeg) {

	mov	rax, QWORD PTR ?lastSeg@@3PEAU_font_seg_@@EA ; lastSeg
	cmp	QWORD PTR seg$[rbp], rax
	jne	SHORT $LN5@FontManage

; 82   : 		lastSeg = seg->prev;

	mov	rax, QWORD PTR seg$[rbp]
	mov	rax, QWORD PTR [rax+52]
	mov	QWORD PTR ?lastSeg@@3PEAU_font_seg_@@EA, rax ; lastSeg

; 83   : 	}

	jmp	SHORT $LN6@FontManage
$LN5@FontManage:

; 84   : 	else {
; 85   : 		seg->next->prev = seg->prev;

	mov	rax, QWORD PTR seg$[rbp]
	mov	rax, QWORD PTR [rax+44]
	mov	rcx, QWORD PTR seg$[rbp]
	mov	rcx, QWORD PTR [rcx+52]
	mov	QWORD PTR [rax+52], rcx
$LN6@FontManage:
$LN1@FontManage:

; 86   : 	}
; 87   : }

	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?FontManagerRemoveSegment@@YAXPEAU_font_seg_@@@Z ENDP	; FontManagerRemoveSegment
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\ftmngr.cpp
;	COMDAT ?FontManagerAddSegment@@YAXPEAU_font_seg_@@@Z
_TEXT	SEGMENT
seg$ = 80
?FontManagerAddSegment@@YAXPEAU_font_seg_@@@Z PROC	; FontManagerAddSegment, COMDAT

; 52   : void FontManagerAddSegment(FontSeg* seg) {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12B7B25A_ftmngr@cpp
	call	__CheckForDebuggerJustMyCode

; 53   : 	seg->next = NULL;

	mov	rax, QWORD PTR seg$[rbp]
	mov	QWORD PTR [rax+44], 0

; 54   : 	seg->prev = NULL;

	mov	rax, QWORD PTR seg$[rbp]
	mov	QWORD PTR [rax+52], 0

; 55   : 	if (firstSeg == NULL) {

	cmp	QWORD PTR ?firstSeg@@3PEAU_font_seg_@@EA, 0 ; firstSeg
	jne	SHORT $LN2@FontManage

; 56   : 		lastSeg = seg;

	mov	rax, QWORD PTR seg$[rbp]
	mov	QWORD PTR ?lastSeg@@3PEAU_font_seg_@@EA, rax ; lastSeg

; 57   : 		firstSeg = seg;

	mov	rax, QWORD PTR seg$[rbp]
	mov	QWORD PTR ?firstSeg@@3PEAU_font_seg_@@EA, rax ; firstSeg

; 58   : 	}

	jmp	SHORT $LN3@FontManage
$LN2@FontManage:

; 59   : 	else {
; 60   : 		lastSeg->next = seg;

	mov	rax, QWORD PTR ?lastSeg@@3PEAU_font_seg_@@EA ; lastSeg
	mov	rcx, QWORD PTR seg$[rbp]
	mov	QWORD PTR [rax+44], rcx

; 61   : 		seg->prev = lastSeg;

	mov	rax, QWORD PTR seg$[rbp]
	mov	rcx, QWORD PTR ?lastSeg@@3PEAU_font_seg_@@EA ; lastSeg
	mov	QWORD PTR [rax+52], rcx
$LN3@FontManage:

; 62   : 	}
; 63   : 	lastSeg = seg;

	mov	rax, QWORD PTR seg$[rbp]
	mov	QWORD PTR ?lastSeg@@3PEAU_font_seg_@@EA, rax ; lastSeg

; 64   : }

	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?FontManagerAddSegment@@YAXPEAU_font_seg_@@@Z ENDP	; FontManagerAddSegment
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\ftmngr.cpp
;	COMDAT ?AuFTMngrGetFontSize@@YAHPEAD@Z
_TEXT	SEGMENT
seg$1 = 0
fontname$ = 96
?AuFTMngrGetFontSize@@YAHPEAD@Z PROC			; AuFTMngrGetFontSize, COMDAT

; 256  : int AuFTMngrGetFontSize(char* fontname) {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12B7B25A_ftmngr@cpp
	call	__CheckForDebuggerJustMyCode

; 257  : 	for (FontSeg* seg = firstSeg; seg != NULL; seg = seg->next) {

	mov	rax, QWORD PTR ?firstSeg@@3PEAU_font_seg_@@EA ; firstSeg
	mov	QWORD PTR seg$1[rbp], rax
	jmp	SHORT $LN4@AuFTMngrGe
$LN2@AuFTMngrGe:
	mov	rax, QWORD PTR seg$1[rbp]
	mov	rax, QWORD PTR [rax+44]
	mov	QWORD PTR seg$1[rbp], rax
$LN4@AuFTMngrGe:
	cmp	QWORD PTR seg$1[rbp], 0
	je	SHORT $LN3@AuFTMngrGe

; 258  : 		if (strcmp(fontname, seg->fontname) == 0) {

	mov	rax, QWORD PTR seg$1[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR fontname$[rbp]
	call	strcmp
	test	eax, eax
	jne	SHORT $LN5@AuFTMngrGe

; 259  : 			return seg->fontFileSz;

	mov	rax, QWORD PTR seg$1[rbp]
	mov	eax, DWORD PTR [rax+40]
	jmp	SHORT $LN1@AuFTMngrGe
$LN5@AuFTMngrGe:

; 260  : 		}
; 261  : 	}

	jmp	SHORT $LN2@AuFTMngrGe
$LN3@AuFTMngrGe:

; 262  : 	return -1;

	mov	eax, -1
$LN1@AuFTMngrGe:

; 263  : }

	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?AuFTMngrGetFontSize@@YAHPEAD@Z ENDP			; AuFTMngrGetFontSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\ftmngr.cpp
;	COMDAT ?AuFTMngrGetNumFonts@@YAHXZ
_TEXT	SEGMENT
?AuFTMngrGetNumFonts@@YAHXZ PROC			; AuFTMngrGetNumFonts, COMDAT

; 269  : int AuFTMngrGetNumFonts() {

$LN3:
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12B7B25A_ftmngr@cpp
	call	__CheckForDebuggerJustMyCode

; 270  : 	return totalSysFonts;

	mov	eax, DWORD PTR ?totalSysFonts@@3HA	; totalSysFonts

; 271  : }

	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?AuFTMngrGetNumFonts@@YAHXZ ENDP			; AuFTMngrGetNumFonts
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\ftmngr.cpp
;	COMDAT ?AuFTMngrGetFontID@@YAHPEAD@Z
_TEXT	SEGMENT
font_id$ = 0
seg$1 = 8
fontname$ = 96
?AuFTMngrGetFontID@@YAHPEAD@Z PROC			; AuFTMngrGetFontID, COMDAT

; 241  : int AuFTMngrGetFontID(char* fontname) {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12B7B25A_ftmngr@cpp
	call	__CheckForDebuggerJustMyCode

; 242  : 	int font_id = 0;

	mov	DWORD PTR font_id$[rbp], 0

; 243  : 	for (FontSeg* seg = firstSeg; seg != NULL; seg = seg->next) {

	mov	rax, QWORD PTR ?firstSeg@@3PEAU_font_seg_@@EA ; firstSeg
	mov	QWORD PTR seg$1[rbp], rax
	jmp	SHORT $LN4@AuFTMngrGe
$LN2@AuFTMngrGe:
	mov	rax, QWORD PTR seg$1[rbp]
	mov	rax, QWORD PTR [rax+44]
	mov	QWORD PTR seg$1[rbp], rax
$LN4@AuFTMngrGe:
	cmp	QWORD PTR seg$1[rbp], 0
	je	SHORT $LN3@AuFTMngrGe

; 244  : 		if (strcmp(fontname, seg->fontname) == 0) {

	mov	rax, QWORD PTR seg$1[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR fontname$[rbp]
	call	strcmp
	test	eax, eax
	jne	SHORT $LN5@AuFTMngrGe

; 245  : 			font_id =  (seg->sharedSeg->id << 16) | seg->sharedSeg->key & UINT16_MAX;

	mov	rax, QWORD PTR seg$1[rbp]
	mov	rax, QWORD PTR [rax+32]
	movzx	eax, WORD PTR [rax+2]
	shl	eax, 16
	mov	rcx, QWORD PTR seg$1[rbp]
	mov	rcx, QWORD PTR [rcx+32]
	movzx	ecx, WORD PTR [rcx]
	and	ecx, 65535				; 0000ffffH
	or	eax, ecx
	mov	DWORD PTR font_id$[rbp], eax

; 246  : 			return font_id;

	mov	eax, DWORD PTR font_id$[rbp]
	jmp	SHORT $LN1@AuFTMngrGe
$LN5@AuFTMngrGe:

; 247  : 		}
; 248  : 	}

	jmp	SHORT $LN2@AuFTMngrGe
$LN3@AuFTMngrGe:

; 249  : 	return -1;

	mov	eax, -1
$LN1@AuFTMngrGe:

; 250  : }

	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?AuFTMngrGetFontID@@YAHPEAD@Z ENDP			; AuFTMngrGetFontID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\ftmngr.cpp
;	COMDAT ?FontManagerInitialise@@YAXXZ
_TEXT	SEGMENT
fs$ = 0
fontconf$ = 8
num_pages$ = 16
first_addr$ = 24
i$1 = 32
addr$2 = 40
?FontManagerInitialise@@YAXXZ PROC			; FontManagerInitialise, COMDAT

; 210  : void FontManagerInitialise() {

$LN9:
	push	rbp
	sub	rsp, 144				; 00000090H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__12B7B25A_ftmngr@cpp
	call	__CheckForDebuggerJustMyCode

; 211  : 	AuTextOut("[aurora]: Loading system fonts \n");

	lea	rcx, OFFSET FLAT:??_C@_0CB@KGEMJHCP@?$FLaurora?$FN?3?5Loading?5system?5fonts?5@
	call	AuTextOut

; 212  : 	firstSeg = NULL;

	mov	QWORD PTR ?firstSeg@@3PEAU_font_seg_@@EA, 0 ; firstSeg

; 213  : 	lastSeg = NULL;

	mov	QWORD PTR ?lastSeg@@3PEAU_font_seg_@@EA, 0 ; lastSeg

; 214  : 	fontKey = FONTMGR_KEY;

	mov	eax, 4660				; 00001234H
	mov	WORD PTR ?fontKey@@3GA, ax		; fontKey

; 215  : 	AuVFSNode* fs = AuVFSFind("/");

	lea	rcx, OFFSET FLAT:??_C@_01KMDKNFGN@?1@
	call	AuVFSFind
	mov	QWORD PTR fs$[rbp], rax

; 216  : 	AuVFSNode* fontconf = AuVFSOpen("/ftlst.cnf");

	lea	rcx, OFFSET FLAT:??_C@_0L@BMFBAAPK@?1ftlst?4cnf@
	call	AuVFSOpen
	mov	QWORD PTR fontconf$[rbp], rax

; 217  : 	if (!fontconf)

	cmp	QWORD PTR fontconf$[rbp], 0
	jne	SHORT $LN5@FontManage

; 218  : 		return;

	jmp	$LN1@FontManage
$LN5@FontManage:

; 219  : 	int num_pages = fontconf->size / PAGE_SIZE;

	xor	edx, edx
	mov	rax, QWORD PTR fontconf$[rbp]
	mov	eax, DWORD PTR [rax+32]
	mov	ecx, 4096				; 00001000H
	div	ecx
	mov	DWORD PTR num_pages$[rbp], eax

; 220  : 	if ((num_pages % PAGE_SIZE) != 0)

	mov	eax, DWORD PTR num_pages$[rbp]
	cdq
	and	edx, 4095				; 00000fffH
	add	eax, edx
	and	eax, 4095				; 00000fffH
	sub	eax, edx
	test	eax, eax
	je	SHORT $LN6@FontManage

; 221  : 		num_pages++;

	mov	eax, DWORD PTR num_pages$[rbp]
	inc	eax
	mov	DWORD PTR num_pages$[rbp], eax
$LN6@FontManage:

; 222  : 
; 223  : 	uint64_t* first_addr = NULL;

	mov	QWORD PTR first_addr$[rbp], 0

; 224  : 	for (int i = 0; i < num_pages; i++) {

	mov	DWORD PTR i$1[rbp], 0
	jmp	SHORT $LN4@FontManage
$LN2@FontManage:
	mov	eax, DWORD PTR i$1[rbp]
	inc	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@FontManage:
	mov	eax, DWORD PTR num_pages$[rbp]
	cmp	DWORD PTR i$1[rbp], eax
	jge	SHORT $LN3@FontManage

; 225  : 		uint64_t* addr = (uint64_t*)P2V((size_t)AuPmmngrAlloc());

	call	AuPmmngrAlloc
	mov	rcx, rax
	call	P2V
	mov	QWORD PTR addr$2[rbp], rax

; 226  : 		if (!first_addr)

	cmp	QWORD PTR first_addr$[rbp], 0
	jne	SHORT $LN7@FontManage

; 227  : 			first_addr = addr;

	mov	rax, QWORD PTR addr$2[rbp]
	mov	QWORD PTR first_addr$[rbp], rax
$LN7@FontManage:

; 228  : 	}

	jmp	SHORT $LN2@FontManage
$LN3@FontManage:

; 229  : 	memset(first_addr, 0, fontconf->size);

	mov	rax, QWORD PTR fontconf$[rbp]
	mov	r8d, DWORD PTR [rax+32]
	xor	edx, edx
	mov	rcx, QWORD PTR first_addr$[rbp]
	call	memset

; 230  : 	AuVFSNodeRead(fs, fontconf, first_addr, fontconf->size);

	mov	rax, QWORD PTR fontconf$[rbp]
	mov	r9d, DWORD PTR [rax+32]
	mov	r8, QWORD PTR first_addr$[rbp]
	mov	rdx, QWORD PTR fontconf$[rbp]
	mov	rcx, QWORD PTR fs$[rbp]
	call	AuVFSNodeRead

; 231  : 	totalSysFonts = 0;

	mov	DWORD PTR ?totalSysFonts@@3HA, 0	; totalSysFonts

; 232  : 	font_conf_data = (uint8_t*)first_addr;

	mov	rax, QWORD PTR first_addr$[rbp]
	mov	QWORD PTR ?font_conf_data@@3PEAEEA, rax	; font_conf_data

; 233  : 	totalSysFonts = FontManagerGetFontCount(font_conf_data);

	mov	rcx, QWORD PTR ?font_conf_data@@3PEAEEA	; font_conf_data
	call	?FontManagerGetFontCount@@YAHPEAE@Z	; FontManagerGetFontCount
	mov	DWORD PTR ?totalSysFonts@@3HA, eax	; totalSysFonts

; 234  : 	FontManagerIterateFontList(font_conf_data);

	mov	rcx, QWORD PTR ?font_conf_data@@3PEAEEA	; font_conf_data
	call	?FontManagerIterateFontList@@YAXPEAE@Z	; FontManagerIterateFontList
$LN1@FontManage:

; 235  : }

	lea	rsp, QWORD PTR [rbp+112]
	pop	rbp
	ret	0
?FontManagerInitialise@@YAXXZ ENDP			; FontManagerInitialise
_TEXT	ENDS
END
