; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?CreateTimer@@YAHHHE@Z				; CreateTimer
PUBLIC	?StartTimer@@YAHH@Z				; StartTimer
PUBLIC	?StopTimer@@YAHH@Z				; StopTimer
PUBLIC	?DestroyTimer@@YAHH@Z				; DestroyTimer
EXTRN	?AuTimerCreate@@YAXGHE@Z:PROC			; AuTimerCreate
EXTRN	?AuTimerStart@@YAXG@Z:PROC			; AuTimerStart
EXTRN	?AuTimerStop@@YAXG@Z:PROC			; AuTimerStop
EXTRN	?AuTimerDestroy@@YAXG@Z:PROC			; AuTimerDestroy
EXTRN	x64_cli:PROC
pdata	SEGMENT
$pdata$?CreateTimer@@YAHHHE@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?CreateTimer@@YAHHHE@Z
$pdata$?StartTimer@@YAHH@Z DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?StartTimer@@YAHH@Z
$pdata$?StopTimer@@YAHH@Z DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?StopTimer@@YAHH@Z
$pdata$?DestroyTimer@@YAHH@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$?DestroyTimer@@YAHH@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?CreateTimer@@YAHHHE@Z DD 011101H
	DD	04211H
$unwind$?StartTimer@@YAHH@Z DD 010801H
	DD	04208H
$unwind$?StopTimer@@YAHH@Z DD 010801H
	DD	04208H
$unwind$?DestroyTimer@@YAHH@Z DD 010801H
	DD	04208H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\aurora\kernel\serv\timerserv.cpp
_TEXT	SEGMENT
threadID$ = 48
?DestroyTimer@@YAHH@Z PROC				; DestroyTimer

; 70   : int DestroyTimer(int threadID) {

$LN3:
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 40					; 00000028H

; 71   : 	x64_cli();

	call	x64_cli

; 72   : 	AuTimerDestroy(threadID);

	movzx	ecx, WORD PTR threadID$[rsp]
	call	?AuTimerDestroy@@YAXG@Z			; AuTimerDestroy

; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	add	rsp, 40					; 00000028H
	ret	0
?DestroyTimer@@YAHH@Z ENDP				; DestroyTimer
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\aurora\kernel\serv\timerserv.cpp
_TEXT	SEGMENT
threadID$ = 48
?StopTimer@@YAHH@Z PROC					; StopTimer

; 59   : int StopTimer(int threadID) {

$LN3:
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 40					; 00000028H

; 60   : 	x64_cli();

	call	x64_cli

; 61   : 	AuTimerStop(threadID);

	movzx	ecx, WORD PTR threadID$[rsp]
	call	?AuTimerStop@@YAXG@Z			; AuTimerStop

; 62   : 	return 0;

	xor	eax, eax

; 63   : }

	add	rsp, 40					; 00000028H
	ret	0
?StopTimer@@YAHH@Z ENDP					; StopTimer
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\aurora\kernel\serv\timerserv.cpp
_TEXT	SEGMENT
threadID$ = 48
?StartTimer@@YAHH@Z PROC				; StartTimer

; 50   : int StartTimer(int threadID) {

$LN3:
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 40					; 00000028H

; 51   : 	x64_cli();

	call	x64_cli

; 52   : 	AuTimerStart(threadID);

	movzx	ecx, WORD PTR threadID$[rsp]
	call	?AuTimerStart@@YAXG@Z			; AuTimerStart

; 53   : 	return 0;

	xor	eax, eax

; 54   : }

	add	rsp, 40					; 00000028H
	ret	0
?StartTimer@@YAHH@Z ENDP				; StartTimer
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\aurora\kernel\serv\timerserv.cpp
_TEXT	SEGMENT
threadID$ = 48
maxTickLimit$ = 56
updatemode$ = 64
?CreateTimer@@YAHHHE@Z PROC				; CreateTimer

; 41   : int CreateTimer(int threadID,int maxTickLimit,uint8_t updatemode) {

$LN3:
	mov	BYTE PTR [rsp+24], r8b
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 40					; 00000028H

; 42   : 	x64_cli();

	call	x64_cli

; 43   : 	AuTimerCreate(threadID, maxTickLimit, updatemode);

	movzx	r8d, BYTE PTR updatemode$[rsp]
	mov	edx, DWORD PTR maxTickLimit$[rsp]
	movzx	ecx, WORD PTR threadID$[rsp]
	call	?AuTimerCreate@@YAXGHE@Z		; AuTimerCreate

; 44   : 	return 0;

	xor	eax, eax

; 45   : }

	add	rsp, 40					; 00000028H
	ret	0
?CreateTimer@@YAHHHE@Z ENDP				; CreateTimer
_TEXT	ENDS
END
