; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?mice_@@3PEAU__VFS_NODE__@@EA			; mice_
PUBLIC	?kybrd_@@3PEAU__VFS_NODE__@@EA			; kybrd_
_BSS	SEGMENT
?mice_@@3PEAU__VFS_NODE__@@EA DQ 01H DUP (?)		; mice_
?kybrd_@@3PEAU__VFS_NODE__@@EA DQ 01H DUP (?)		; kybrd_
_BSS	ENDS
CONST	SEGMENT
$SG2883	DB	'/dev', 00H
	ORG $+3
$SG2885	DB	'mice', 00H
	ORG $+3
$SG2886	DB	'/', 00H
	ORG $+2
$SG2888	DB	'kybrd', 00H
	ORG $+2
$SG2889	DB	'/', 00H
CONST	ENDS
PUBLIC	?AuDevInputInitialise@@YAXXZ			; AuDevInputInitialise
PUBLIC	AuDevReadMice
PUBLIC	AuDevWriteMice
EXTRN	AuVFSFind:PROC
EXTRN	AuVFSNodeRead:PROC
EXTRN	AuVFSNodeWrite:PROC
EXTRN	?AuPipeUnread@@YA_KPEAU_pipe_@@@Z:PROC		; AuPipeUnread
EXTRN	?AuCreatePipe@@YAPEAU__VFS_NODE__@@PEAD_K@Z:PROC ; AuCreatePipe
EXTRN	?AuDevFSAddFile@@YAHPEAU__VFS_NODE__@@PEAD0@Z:PROC ; AuDevFSAddFile
pdata	SEGMENT
$pdata$?AuDevInputInitialise@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+122
	DD	imagerel $unwind$?AuDevInputInitialise@@YAXXZ
$pdata$AuDevReadMice DD imagerel $LN5
	DD	imagerel $LN5+75
	DD	imagerel $unwind$AuDevReadMice
$pdata$AuDevWriteMice DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$AuDevWriteMice
pdata	ENDS
xdata	SEGMENT
$unwind$?AuDevInputInitialise@@YAXXZ DD 010401H
	DD	06204H
$unwind$AuDevReadMice DD 010901H
	DD	06209H
$unwind$AuDevWriteMice DD 010901H
	DD	04209H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\aurora\kernel\fs\dev\devinput.cpp
_TEXT	SEGMENT
outmsg$ = 48
AuDevWriteMice PROC

; 54   : void AuDevWriteMice(AuInputMessage* outmsg) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 55   : 	AuVFSNodeWrite(mice_, NULL, (uint64_t*)outmsg, sizeof(AuInputMessage));

	mov	r9d, 32					; 00000020H
	mov	r8, QWORD PTR outmsg$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR ?mice_@@3PEAU__VFS_NODE__@@EA ; mice_
	call	AuVFSNodeWrite

; 56   : }

	add	rsp, 40					; 00000028H
	ret	0
AuDevWriteMice ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\aurora\kernel\fs\dev\devinput.cpp
_TEXT	SEGMENT
pipe$ = 32
inputmsg$ = 64
AuDevReadMice PROC

; 44   : void AuDevReadMice(AuInputMessage* inputmsg) {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 45   : 	AuPipe *pipe = (AuPipe*)mice_->device;

	mov	rax, QWORD PTR ?mice_@@3PEAU__VFS_NODE__@@EA ; mice_
	mov	rax, QWORD PTR [rax+63]
	mov	QWORD PTR pipe$[rsp], rax
$LN2@AuDevReadM:

; 46   : 	while (AuPipeUnread(pipe) > (int)(32 * sizeof(AuInputMessage)))

	mov	rcx, QWORD PTR pipe$[rsp]
	call	?AuPipeUnread@@YA_KPEAU_pipe_@@@Z	; AuPipeUnread
	cmp	rax, 1024				; 00000400H
	jbe	SHORT $LN1@AuDevReadM

; 47   : 		AuVFSNodeRead(mice_, NULL, (uint64_t*)inputmsg, sizeof(AuInputMessage));

	mov	r9d, 32					; 00000020H
	mov	r8, QWORD PTR inputmsg$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR ?mice_@@3PEAU__VFS_NODE__@@EA ; mice_
	call	AuVFSNodeRead
	jmp	SHORT $LN2@AuDevReadM
$LN1@AuDevReadM:

; 48   : }

	add	rsp, 56					; 00000038H
	ret	0
AuDevReadMice ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\xeneva project\aurora\kernel\fs\dev\devinput.cpp
_TEXT	SEGMENT
devfs$ = 32
?AuDevInputInitialise@@YAXXZ PROC			; AuDevInputInitialise

; 62   : void AuDevInputInitialise() {

$LN3:
	sub	rsp, 56					; 00000038H

; 63   : 	AuVFSNode* devfs = AuVFSFind("/dev");

	lea	rcx, OFFSET FLAT:$SG2883
	call	AuVFSFind
	mov	QWORD PTR devfs$[rsp], rax

; 64   : 
; 65   : 	mice_ = AuCreatePipe("mice", sizeof(AuInputMessage)* NUM_MOUSE_PACKETS);

	mov	edx, 16384				; 00004000H
	lea	rcx, OFFSET FLAT:$SG2885
	call	?AuCreatePipe@@YAPEAU__VFS_NODE__@@PEAD_K@Z ; AuCreatePipe
	mov	QWORD PTR ?mice_@@3PEAU__VFS_NODE__@@EA, rax ; mice_

; 66   : 	AuDevFSAddFile(devfs, "/", mice_);

	mov	r8, QWORD PTR ?mice_@@3PEAU__VFS_NODE__@@EA ; mice_
	lea	rdx, OFFSET FLAT:$SG2886
	mov	rcx, QWORD PTR devfs$[rsp]
	call	?AuDevFSAddFile@@YAHPEAU__VFS_NODE__@@PEAD0@Z ; AuDevFSAddFile

; 67   : 	
; 68   : 	kybrd_ = AuCreatePipe("kybrd", sizeof(AuInputMessage)* NUM_KEYBOARD_PACKETS);

	mov	edx, 16384				; 00004000H
	lea	rcx, OFFSET FLAT:$SG2888
	call	?AuCreatePipe@@YAPEAU__VFS_NODE__@@PEAD_K@Z ; AuCreatePipe
	mov	QWORD PTR ?kybrd_@@3PEAU__VFS_NODE__@@EA, rax ; kybrd_

; 69   : 	AuDevFSAddFile(devfs, "/", kybrd_);

	mov	r8, QWORD PTR ?kybrd_@@3PEAU__VFS_NODE__@@EA ; kybrd_
	lea	rdx, OFFSET FLAT:$SG2889
	mov	rcx, QWORD PTR devfs$[rsp]
	call	?AuDevFSAddFile@@YAHPEAU__VFS_NODE__@@PEAD0@Z ; AuDevFSAddFile

; 70   : }

	add	rsp, 56					; 00000038H
	ret	0
?AuDevInputInitialise@@YAXXZ ENDP			; AuDevInputInitialise
_TEXT	ENDS
END
