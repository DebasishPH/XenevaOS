; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30154.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__AB3BDA9D_init@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?_AuMain@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z		; _AuMain
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0CL@IFOGFJIG@BootDev?5HID?5?9?$DO?5?$CFx?0?5UID?5?9?$DO?5?$CFx?0?5C@ ; `string'
EXTRN	?AuConsoleInitialize@@YAXPEAU_KERNEL_BOOT_INFO_@@_N@Z:PROC ; AuConsoleInitialize
EXTRN	?AuConsolePostInitialise@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z:PROC ; AuConsolePostInitialise
EXTRN	AuTextOut:PROC
EXTRN	?AuPmmngrInitialize@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z:PROC ; AuPmmngrInitialize
EXTRN	?AuVmmngrInitialize@@YAXXZ:PROC			; AuVmmngrInitialize
EXTRN	?AuVmmngrBootFree@@YAXXZ:PROC			; AuVmmngrBootFree
EXTRN	?AuVFSInitialise@@YAXXZ:PROC			; AuVFSInitialise
EXTRN	?AuSchedulerStart@@YAXXZ:PROC			; AuSchedulerStart
EXTRN	?AuSchedulerInitialise@@YAXXZ:PROC		; AuSchedulerInitialise
EXTRN	?AuStartRootProc@@YAXXZ:PROC			; AuStartRootProc
EXTRN	?AuInitialiseSHMMan@@YAXXZ:PROC			; AuInitialiseSHMMan
EXTRN	AuHalInitialise:PROC
EXTRN	AuHalPostInitialise:PROC
EXTRN	x64_cli:PROC
EXTRN	?AuInitialiseSerial@@YAXXZ:PROC			; AuInitialiseSerial
EXTRN	AuHeapInitialize:PROC
EXTRN	?SharedMemMapListInitialise@@YAXXZ:PROC		; SharedMemMapListInitialise
EXTRN	?AuAHCIInitialise@@YAXXZ:PROC			; AuAHCIInitialise
EXTRN	?AuTTYInitialise@@YAXXZ:PROC			; AuTTYInitialise
EXTRN	?AuPS2MouseInitialise@@YAXXZ:PROC		; AuPS2MouseInitialise
EXTRN	?AuPS2KybrdInitialize@@YAXXZ:PROC		; AuPS2KybrdInitialize
EXTRN	?AuRTCInitialize@@YAXXZ:PROC			; AuRTCInitialize
EXTRN	?AuDrvMngrInitialize@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z:PROC ; AuDrvMngrInitialize
EXTRN	?AuInitialiseLoader@@YAXXZ:PROC			; AuInitialiseLoader
EXTRN	?AuSoundInitialise@@YAXXZ:PROC			; AuSoundInitialise
EXTRN	?AuInitialiseNet@@YAXXZ:PROC			; AuInitialiseNet
EXTRN	?AuIPCPostBoxInitialise@@YAXXZ:PROC		; AuIPCPostBoxInitialise
EXTRN	?AuTimerDataInitialise@@YAXXZ:PROC		; AuTimerDataInitialise
EXTRN	?FontManagerInitialise@@YAXXZ:PROC		; FontManagerInitialise
EXTRN	__CheckForDebuggerJustMyCode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_AuMain@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z DD imagerel $LN6
	DD	imagerel $LN6+241
	DD	imagerel $unwind$?_AuMain@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z
pdata	ENDS
;	COMDAT ??_C@_0CL@IFOGFJIG@BootDev?5HID?5?9?$DO?5?$CFx?0?5UID?5?9?$DO?5?$CFx?0?5C@
CONST	SEGMENT
??_C@_0CL@IFOGFJIG@BootDev?5HID?5?9?$DO?5?$CFx?0?5UID?5?9?$DO?5?$CFx?0?5C@ DB 'B'
	DB	'ootDev HID -> %x, UID -> %x, CID -> %x ', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_AuMain@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\init.cpp
;	COMDAT ?_AuMain@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z
_TEXT	SEGMENT
info$ = 80
?_AuMain@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z PROC		; _AuMain, COMDAT

; 75   : void _AuMain(KERNEL_BOOT_INFO *info) {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__AB3BDA9D_init@cpp
	call	__CheckForDebuggerJustMyCode

; 76   : 	AuConsoleInitialize(info, true);	

	mov	dl, 1
	mov	rcx, QWORD PTR info$[rbp]
	call	?AuConsoleInitialize@@YAXPEAU_KERNEL_BOOT_INFO_@@_N@Z ; AuConsoleInitialize

; 77   : 	AuPmmngrInitialize(info);

	mov	rcx, QWORD PTR info$[rbp]
	call	?AuPmmngrInitialize@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z ; AuPmmngrInitialize

; 78   : 	AuVmmngrInitialize();

	call	?AuVmmngrInitialize@@YAXXZ		; AuVmmngrInitialize

; 79   : 	AuHeapInitialize();

	call	AuHeapInitialize

; 80   : 	
; 81   : 	AuHalInitialise(info);

	mov	rcx, QWORD PTR info$[rbp]
	call	AuHalInitialise

; 82   : 	AuInitialiseSerial();

	call	?AuInitialiseSerial@@YAXXZ		; AuInitialiseSerial

; 83   : 	AuVFSInitialise();

	call	?AuVFSInitialise@@YAXXZ			; AuVFSInitialise

; 84   : 	AuTextOut("BootDev HID -> %x, UID -> %x, CID -> %x \r\n", info->hid, info->uid, info->cid);

	mov	rax, QWORD PTR info$[rbp]
	mov	r9d, DWORD PTR [rax+178]
	mov	rax, QWORD PTR info$[rbp]
	mov	r8d, DWORD PTR [rax+174]
	mov	rax, QWORD PTR info$[rbp]
	mov	edx, DWORD PTR [rax+170]
	lea	rcx, OFFSET FLAT:??_C@_0CL@IFOGFJIG@BootDev?5HID?5?9?$DO?5?$CFx?0?5UID?5?9?$DO?5?$CFx?0?5C@
	call	AuTextOut

; 85   : 	AuAHCIInitialise();

	call	?AuAHCIInitialise@@YAXXZ		; AuAHCIInitialise

; 86   : 
; 87   : 	AuConsolePostInitialise(info);

	mov	rcx, QWORD PTR info$[rbp]
	call	?AuConsolePostInitialise@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z ; AuConsolePostInitialise

; 88   : 	/* Here initialize all legacy bus system
; 89   : 	 * like ps2.... using AuLegacyBusInitialize() */
; 90   : 	AuPS2MouseInitialise();

	call	?AuPS2MouseInitialise@@YAXXZ		; AuPS2MouseInitialise

; 91   : 	AuRTCInitialize();

	call	?AuRTCInitialize@@YAXXZ			; AuRTCInitialize

; 92   : 	AuPS2KybrdInitialize();

	call	?AuPS2KybrdInitialize@@YAXXZ		; AuPS2KybrdInitialize

; 93   : 
; 94   : 	/*initialise kernel tty */
; 95   : 	AuTTYInitialise();

	call	?AuTTYInitialise@@YAXXZ			; AuTTYInitialise

; 96   : 
; 97   : 	/* initialise the shared mem man */
; 98   : 	AuInitialiseSHMMan();

	call	?AuInitialiseSHMMan@@YAXXZ		; AuInitialiseSHMMan

; 99   : 
; 100  : 	SharedMemMapListInitialise();

	call	?SharedMemMapListInitialise@@YAXXZ	; SharedMemMapListInitialise

; 101  : 
; 102  : 	/* initialise sound service */
; 103  : 	AuSoundInitialise();

	call	?AuSoundInitialise@@YAXXZ		; AuSoundInitialise

; 104  : 
; 105  : 	/* initialise PostBoxIPCManager */
; 106  : 	AuIPCPostBoxInitialise();

	call	?AuIPCPostBoxInitialise@@YAXXZ		; AuIPCPostBoxInitialise

; 107  : 
; 108  : 	/* initialise aurora timer manager*/
; 109  : 	AuTimerDataInitialise();

	call	?AuTimerDataInitialise@@YAXXZ		; AuTimerDataInitialise

; 110  : 
; 111  : 	/* initialise pre network service*/
; 112  : 	AuInitialiseNet();

	call	?AuInitialiseNet@@YAXXZ			; AuInitialiseNet

; 113  : 
; 114  : 	x64_cli();

	call	x64_cli

; 115  : 	AuSchedulerInitialise();

	call	?AuSchedulerInitialise@@YAXXZ		; AuSchedulerInitialise

; 116  : 	
; 117  : 	/*initialise aurora driver manager*/
; 118  : 	AuDrvMngrInitialize(info);

	mov	rcx, QWORD PTR info$[rbp]
	call	?AuDrvMngrInitialize@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z ; AuDrvMngrInitialize

; 119  : 
; 120  : 	/* initialise all application processors*/
; 121  : 	AuHalPostInitialise();

	call	AuHalPostInitialise

; 122  : 
; 123  : 	/* intiialise all system fonts */
; 124  : 	FontManagerInitialise();

	call	?FontManagerInitialise@@YAXXZ		; FontManagerInitialise

; 125  : 	
; 126  : 	AuInitialiseLoader();

	call	?AuInitialiseLoader@@YAXXZ		; AuInitialiseLoader

; 127  : 
; 128  : 	/* make the kernel standalone*/
; 129  : 	AuVmmngrBootFree();

	call	?AuVmmngrBootFree@@YAXXZ		; AuVmmngrBootFree

; 130  : 
; 131  : 	/* Process initialisation begins here */
; 132  : 	AuStartRootProc();

	call	?AuStartRootProc@@YAXXZ			; AuStartRootProc

; 133  : 	AuSchedulerStart();

	call	?AuSchedulerStart@@YAXXZ		; AuSchedulerStart
$LN2@AuMain:

; 134  : 	for (;;);

	jmp	SHORT $LN2@AuMain

; 135  : }

	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?_AuMain@@YAXPEAU_KERNEL_BOOT_INFO_@@@Z ENDP		; _AuMain
_TEXT	ENDS
END
