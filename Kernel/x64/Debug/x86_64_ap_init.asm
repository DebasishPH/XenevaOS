; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30154.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__37029E49_x86_64_ap_init@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?x86_64_ap_init@@YAXPEAX@Z			; x86_64_ap_init
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0L@BEBLEAIC@ap?5init?5?$AN?6@		; `string'
PUBLIC	??_C@_0BL@ONOLHEGL@CPU?5ID?5?9?$DO?5?$CFd?0?5TSS?5?9?$DO?5?$CFx?5?$AN?6@ ; `string'
EXTRN	?x86_64_hal_init_gdt_ap@@YAXXZ:PROC		; x86_64_hal_init_gdt_ap
EXTRN	?AuAPICInitialise@@YAX_N@Z:PROC			; AuAPICInitialise
EXTRN	?x86_64_idt_init_ap@@YAXXZ:PROC			; x86_64_idt_init_ap
EXTRN	x64_cli:PROC
EXTRN	x64_pause:PROC
EXTRN	?x86_64_enable_syscall_ext@@YAXXZ:PROC		; x86_64_enable_syscall_ext
EXTRN	?x86_64_init_user_ap@@YAX_K@Z:PROC		; x86_64_init_user_ap
EXTRN	?x86_64_hal_cpu_feature_enable@@YAXXZ:PROC	; x86_64_hal_cpu_feature_enable
EXTRN	?x86_64_set_ap_start_bit@@YAX_N@Z:PROC		; x86_64_set_ap_start_bit
EXTRN	?x86_64_initialise_syscall@@YAXXZ:PROC		; x86_64_initialise_syscall
EXTRN	?AuCreatePerCPU@@YAXPEAX@Z:PROC			; AuCreatePerCPU
EXTRN	?AuPerCPUGetCpuID@@YAEXZ:PROC			; AuPerCPUGetCpuID
EXTRN	?AuPerCPUGetKernelTSS@@YAPEAU_tss@@XZ:PROC	; AuPerCPUGetKernelTSS
EXTRN	SeTextOut:PROC
EXTRN	AuTextOut:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?x86_64_ap_init@@YAXPEAX@Z DD imagerel $LN6
	DD	imagerel $LN6+153
	DD	imagerel $unwind$?x86_64_ap_init@@YAXPEAX@Z
pdata	ENDS
;	COMDAT ??_C@_0BL@ONOLHEGL@CPU?5ID?5?9?$DO?5?$CFd?0?5TSS?5?9?$DO?5?$CFx?5?$AN?6@
CONST	SEGMENT
??_C@_0BL@ONOLHEGL@CPU?5ID?5?9?$DO?5?$CFd?0?5TSS?5?9?$DO?5?$CFx?5?$AN?6@ DB 'C'
	DB	'PU ID -> %d, TSS -> %x ', 0dH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BEBLEAIC@ap?5init?5?$AN?6@
CONST	SEGMENT
??_C@_0L@BEBLEAIC@ap?5init?5?$AN?6@ DB 'ap init ', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?x86_64_ap_init@@YAXPEAX@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File E:\Xeneva Project\Aurora\Kernel\Hal\x86_64_ap_init.cpp
;	COMDAT ?x86_64_ap_init@@YAXPEAX@Z
_TEXT	SEGMENT
tv68 = 64
cpu$ = 96
?x86_64_ap_init@@YAXPEAX@Z PROC				; x86_64_ap_init, COMDAT

; 45   : void x86_64_ap_init(void* cpu) {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__37029E49_x86_64_ap_init@cpp
	call	__CheckForDebuggerJustMyCode

; 46   : 	x64_cli();

	call	x64_cli

; 47   : 	SeTextOut("ap init \r\n");

	lea	rcx, OFFSET FLAT:??_C@_0L@BEBLEAIC@ap?5init?5?$AN?6@
	call	SeTextOut

; 48   : 
; 49   : 	/* tell the bsp that initialization
; 50   : 	 * process is finished */
; 51   : 	AuCreatePerCPU(cpu);

	mov	rcx, QWORD PTR cpu$[rbp]
	call	?AuCreatePerCPU@@YAXPEAX@Z		; AuCreatePerCPU

; 52   : 	x86_64_hal_init_gdt_ap();

	call	?x86_64_hal_init_gdt_ap@@YAXXZ		; x86_64_hal_init_gdt_ap

; 53   : 	x86_64_idt_init_ap();

	call	?x86_64_idt_init_ap@@YAXXZ		; x86_64_idt_init_ap

; 54   : 	x86_64_enable_syscall_ext();

	call	?x86_64_enable_syscall_ext@@YAXXZ	; x86_64_enable_syscall_ext

; 55   : 
; 56   : 	AuAPICInitialise(false);

	xor	ecx, ecx
	call	?AuAPICInitialise@@YAX_N@Z		; AuAPICInitialise

; 57   : 
; 58   : 
; 59   : 	x86_64_init_user_ap(64);

	mov	ecx, 64					; 00000040H
	call	?x86_64_init_user_ap@@YAX_K@Z		; x86_64_init_user_ap

; 60   : 	x86_64_initialise_syscall();

	call	?x86_64_initialise_syscall@@YAXXZ	; x86_64_initialise_syscall

; 61   : 	x86_64_hal_cpu_feature_enable();

	call	?x86_64_hal_cpu_feature_enable@@YAXXZ	; x86_64_hal_cpu_feature_enable

; 62   : 
; 63   : 	/* till here, almost cpu initialisation done,
; 64   : 	 * now just start the scheduler
; 65   : 	 */
; 66   : 	//AuSchedulerInitAp();
; 67   : 	AuTextOut("CPU ID -> %d, TSS -> %x \r\n", AuPerCPUGetCpuID(), AuPerCPUGetKernelTSS());

	call	?AuPerCPUGetKernelTSS@@YAPEAU_tss@@XZ	; AuPerCPUGetKernelTSS
	mov	QWORD PTR tv68[rbp], rax
	call	?AuPerCPUGetCpuID@@YAEXZ		; AuPerCPUGetCpuID
	movzx	eax, al
	mov	rcx, QWORD PTR tv68[rbp]
	mov	r8, rcx
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0BL@ONOLHEGL@CPU?5ID?5?9?$DO?5?$CFd?0?5TSS?5?9?$DO?5?$CFx?5?$AN?6@
	call	AuTextOut

; 68   : 	x86_64_set_ap_start_bit(true);

	mov	cl, 1
	call	?x86_64_set_ap_start_bit@@YAX_N@Z	; x86_64_set_ap_start_bit
$LN2@x86_64_ap_:

; 69   : 	for (;;){
; 70   : 		x64_pause();

	call	x64_pause

; 71   : 	}

	jmp	SHORT $LN2@x86_64_ap_

; 72   : }

	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?x86_64_ap_init@@YAXPEAX@Z ENDP				; x86_64_ap_init
_TEXT	ENDS
END
